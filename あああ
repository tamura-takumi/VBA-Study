Sub main()

    '変数
    Dim bookName As String '値入力シートのブック名
    Dim syoriNo As Integer  '処理内容番号
    Dim arrList As Variant 'カンマ区切り入力値
    
    'Dim inputValChckResult(2) As Variant
    
    Workbooks("Book1.xlsm").Activate
    Sheets("値入力用シート").Activate
    
    '引数個数チェック
    If カンマ区切り入力値引数個数チェック(Range("B15").Value) = False Then
        MsgBox "入力値を見直して下さい"
        Exit Sub
    End If
    
    Call おためし02
    
    
    '処理番号に応じた処理を実行する。
    '1:
    Call 処理実行(Range("B15").Value)
    
    Call おためし02
    Workbooks(Range("B14").Value).Activate
    Sheets("地域の人口ランキング").Activate
    MsgBox "main終了"
    
End Sub
Sub おためし01()
    '表示順位の個数分、順位行を作成
    Dim bottomRow As Long
    bottomRow = 1048576 'EXCELの最終行
    For i = 0 To 3 - 2
       Rows("7:10").Copy
       Rows(Range("B" & bottomRow).End(xlUp).Offset(1, 0).row & ":" & Range("B" & bottomRow).End(xlUp).Offset(1, 0).row).Insert Shift:=xlDown
       Range("B" & Range("B" & bottomRow).End(xlUp).row & ":" & "B" & Range("B" & bottomRow).End(xlUp).row + 3).FormulaR1C1 = i + 2 & "位"
    Next i
End Sub
Sub おためし02()
    'おためし02
    
    Workbooks("da01.xlsx").Activate
    Sheets("人口 (2)").Activate
    Range("E21:E30").Copy
    Sheets("人口").Activate
    Range("E21").Select
    ActiveSheet.Paste
    Workbooks("Book1.xlsm").Activate
    
    
End Sub
Sub おためし03()
    'おためし03
    MsgBox "testおためし03"
End Sub

Private Function カンマ区切り入力値引数個数チェック(syoriNo As Integer)

    カンマ区切り入力値引数個数チェック = True
    
    '処理内容番号にたいする、引数リストのチェック
    Select Case syoriNo
    Case 1
        'カンマ区切り入力値引数を代入
        arrList = Split(Range("B16").Value, ",")
        
        '確認用
        'Dim i As Integer
        'For i = 0 To UBound(arrList)
        '    Debug.Print arrList(i)
        'Next i
        
        '引数個数のチェック
        If 5 <> UBound(arrList) + 1 Then
            カンマ区切り入力値引数個数チェック = False
        End If
        
    Case Else
        カンマ区切り入力値引数個数チェック = False
    End Select

End Function
'[VBA] 配列を昇順または降順に並べ替える関数

'Option Base 1

'配列の昇順降順ソート
'https://atelierkobato.com/mother/
Function Sort_Array(x() As Variant, Optional s As Long = 0) As Variant

    Dim k As Long
    Dim ub As Long
    Dim y() As Variant

    '配列x()のインデックス上限値を取得
    ub = UBound(x)

    '配列y()のインデックス上限値を設定
    ReDim y(ub)

    For k = 1 To ub

        'オプション引数s=0は昇順です
        If s = 0 Then
            y(k) = WorksheetFunction.Small(x(), k)

          'オプション引数sに0以外の値が入ると降順です
        Else
            y(k) = WorksheetFunction.Large(x(), k)

        End If

    Next k

    Sort_Array = y()

End Function

Private Sub 処理実行(syoriNo As Integer)

    Dim bottomRow As Long
    bottomRow = 1048576 'EXCELの最終行

    Select Case syoriNo
    Case 1
        '引数内容
        '地域が「群馬～山梨（関東と西北部）,期間FROM,期間TO,利用する表の名称,第何位まで表示するか？
        Dim arrList() As String
        Dim ageList() As String
        Dim rankList() As String
        Dim tmpStrList() As String
        Dim tmpStrList1() As String
        Dim tmpCnt() As Long
        Dim areaFindFrom, areaFindTo As Integer
        Dim cnt As Integer
        Dim indexNum() As Long
        Dim indexNumCnt As Integer
        Dim str As String
        Dim flg As Boolean
        Dim Max As Long
        Dim Max_index As String
        flg = False
        Dim map As Object
        Set map = CreateObject("Scripting.Dictionary")
        Dim keys() As Variant
        
        'カンマ区切りの入力値を配列に格納する
        arrList = Split(Range("B16").Value, ",")
        
        '地域別の処理
        '地域シートの先頭連番と地域名をマップとして保持する
        Workbooks("da01.xlsx").Activate
        Sheets("地域").Activate
        For i = Range("A1").End(xlDown).row + 1 To Range("A" & bottomRow).End(xlUp).row
            map.Add Range("A" & i).Value, Range("B" & i).Value
        Next i
        '変数keysにキー情報を保持
        keys = map.keys
        
        '対象ひな形をコピーしリネーム
        'もし、地域の人口ランキングシートが存在するなら、シート削除
        For i = 1 To Worksheets.Count
            If Sheets(i).Name = "地域の人口ランキング" Then
                Application.DisplayAlerts = False
                Sheets(i).Delete
                Application.DisplayAlerts = True
            End If
        Next
        
        'コピーとリネーム
        Sheets(arrList(3)).Copy after:=Worksheets(Worksheets.Count)
        ActiveSheet.Name = "地域の人口ランキング"
        
        '表示順位の個数分、順位行を作成
        For i = 0 To arrList(4) - 2
            Rows("7:10").Copy
            Rows(Range("B" & bottomRow).End(xlUp).Offset(1, 0).row & ":" & Range("B" & bottomRow).End(xlUp).Offset(1, 0).row).Insert Shift:=xlDown
            Range("B" & Range("B" & bottomRow).End(xlUp).row & ":" & "B" & Range("B" & bottomRow).End(xlUp).row + 3).FormulaR1C1 = i + 2 & "位"
        Next i
        
        '地域名に地域を入力
        Range("C1:I2").FormulaR1C1 = map.Item(keys(arrList(0)))
        
        '「人口シートの地域列の先頭連番=カンマ区切りの入力値、第一引数」の順位を決定する
        Sheets("人口").Activate
        
        '年代を配列に格納し保持させる（年代配列）
        ReDim ageList(0 To (Range("B8").End(xlToRight).Column - 1) - (Range("B8").End(xlToRight).Column / 3 * 2)) As String
        For i = LBound(ageList) To UBound(ageList)
            ageList(i) = Cells(7, 2 + i * 3)
        Next i
        
        '「年度範囲の人口総数のセル列番号を取得」の総数データ抽出開始列番号を取得し、tmpCnt(0)に代入
        ReDim tmpCnt(UBound(ageList)) As Long
        For i = LBound(ageList) To UBound(ageList)
            If ageList(i) Like arrList(1) & "?" Then
                If i = 0 Then
                    tmpCnt(0) = 2
                Else
                    tmpCnt(0) = 2 + i * 3
                End If
            End If
        Next i
        ReDim Preserve tmpCnt(UBound(ageList)) As Long
        
        '年代配列から、年代From～Toの範囲で抽出後、再度年代配列に格納する。
        cnt = 0
        For i = LBound(ageList) To UBound(ageList)
            If ageList(i) Like arrList(1) & "?" Or cnt <> 0 Then
                ageList(cnt) = ageList(i)
                If ageList(i) Like arrList(2) & "?" And i <> UBound(ageList) Then
                    ReDim Preserve ageList(0 To i) As String
                    Exit For
                End If
                cnt = cnt + 1
            End If
        Next i
        
        
        '抽出した年代配列の範囲内で人口総数の最大N位のものを探す
        '検索開始行、終了行の取得
        cnt = 0
        For i = Range("A12").row To Range("A12").End(xlDown).row
            
            '検索開始行の取得
            If arrList(0) = Left(Range("A" & i), 1) And Range("A12").row = i Then
                areaFindFrom = Range("A" & i).row
            ElseIf arrList(0) = Left(Range("A" & i), 1) And arrList(0) <> Left(Range("A" & i - 1), 1) Then
                areaFindFrom = Range("A" & i).row
            End If
            
            '検索終了行の取得
            If arrList(0) = Left(Range("A" & i), 1) And Range("A12").End(xlDown).row = i Then
                areaFindTo = Range("A" & i).row
            ElseIf arrList(0) = Left(Range("A" & i), 1) And arrList(0) <> Left(Range("A" & i + 1), 1) Then
                areaFindTo = Range("A" & i).row
            End If
        Next i
        
        '年度範囲内、地域CD範囲内の人口総数からN位までの値を取得
        ReDim Preserve tmpCnt(UBound(ageList)) As Long
        '列の開始列番号を代入
        'tmpCnt(0) = 2
        str = str & ":" & tmpCnt(0)
        'cnt = 2
        '年度範囲の人口総数のセル列番号を取得
        For i = 1 To UBound(ageList) - 1
            'tmpCnt(0) = ageList(i) * 3 + 2 + 1
            tmpCnt(i) = tmpCnt(i - 1) + 3
            str = str & ":" & tmpCnt(i)
        Next i
        
        Debug.Print str
        str = ""
        Debug.Print UBound(tmpCnt)
        cnt = 0
        
        '人口データを配列に格納する
        'MsgBox "areaFindTo - areaFindFrom" & areaFindTo - areaFindFrom
        ReDim tmpStrList1(areaFindTo - areaFindFrom + 1) As String
        ReDim tmpStrList(UBound(tmpCnt) * (areaFindTo - areaFindFrom + 1)) As String
        For i = 0 To UBound(tmpCnt) - 1 '横軸
            cnt = 0
            For j = 0 To UBound(tmpStrList1)
                tmpStrList1(j) = "0"
            Next j
            For j = areaFindFrom To areaFindTo '縦軸
                tmpStrList(i) = Cells(areaFindFrom + cnt, tmpCnt(i)) '配列値が正しくないのは、添え字が外側のFORだから
                tmpStrList1(j - areaFindFrom) = Cells(areaFindFrom + cnt, tmpCnt(i)) 'tmpStrList1にセル情報を一時保存し、tmpStrListにちゃんと保存させたい。。
                cnt = cnt + 1
                str = str & tmpStrList1(i) & Chr(10)
            Next j
            
            str = str & Chr(10)
        Next i
        Debug.Print str
        
        '人口データを配列に格納する2
        '縦のセル番号確認→OK
        'MsgBox "tmpCnt(0):" & tmpCnt(0)
        'MsgBox "tmpCnt(1):" & tmpCnt(1)
        'MsgBox "tmpCnt(2):" & tmpCnt(2)
        'MsgBox "tmpCnt(3):" & tmpCnt(3)
        ReDim tmpStrList1(areaFindTo - areaFindFrom + 1) As String
        ReDim tmpStrList(UBound(tmpCnt) * (areaFindTo - areaFindFrom + 1)) As String
        'MsgBox "tmpStrList:" & UBound(tmpStrList)
        For i = 0 To UBound(tmpCnt) - 1
            tmpStrList(cnt) = "0"
        Next i
        cnt = 0
        For i = 0 To UBound(tmpCnt) - 1
            For j = areaFindFrom To areaFindTo
                tmpStrList(cnt) = Cells(j, tmpCnt(i))
                cnt = cnt + 1
            Next j
        Next i
        'MsgBox "cnt:" & cnt
        
        
        '抽出した人口から最大N位までを算出
        '地域CDの個数区切りで年代は切替
        
        
        Debug.Print "---------------"
        For i = 0 To UBound(tmpStrList) - 1
            Debug.Print tmpStrList(i) & ": " & i
        Next i
        Debug.Print "---------------"
        
        
        
        '配列からN位の最大値を取得
        indexNumCnt = 0
        ReDim indexNum(arrList(4) - 1) As Long
        ReDim tmpCnt(UBound(tmpStrList) - 1) As Long
        For rnk = 0 To arrList(4) - 1
        For i = 0 To UBound(tmpStrList) - 1
            If tmpStrList(i) = "" Then
                tmpStrList(i) = 0
            End If
            tmpCnt(i) = CLng(tmpStrList(i))
        Next i
        Max = Application.WorksheetFunction.Max(tmpCnt)
        'MsgBox "順位" & rnk & ":" & Max
        cnt = 0
        For i = 0 To UBound(tmpCnt)
            If tmpCnt(i) = Max Then
                'インデックス番号を取得
                indexNum(indexNumCnt) = i
            End If
        Next i
        Debug.Print "indexNum(indexNumCnt):" & indexNum(indexNumCnt)
        '配列内の最大値を0に設定
        tmpStrList(indexNum(indexNumCnt)) = "0"
        indexNumCnt = indexNumCnt + 1
        Next rnk
        
        'MsgBox "indexNum(0):" & indexNum(0) '33
        'MsgBox "indexNum(1):" & indexNum(1) '23
        'MsgBox "indexNum(2):" & indexNum(2) '13
        
        'indexNum配列を元に、セル番地を取得
        str = ""
        For i = 0 To arrList(4) - 1
            '列番号の取得
            Debug.Print i + 1 & "位の列番号:" & Int(indexNum(i) / (areaFindTo - areaFindFrom + 1)) * 3 + 5
            '行番号の取得
            Debug.Print i + 1 & "位の行番号:" & Int(indexNum(i) Mod (areaFindTo - areaFindFrom + 1)) + areaFindFrom
            
            '人口総数を地域の人口ランキングシートに反映
            Sheets("人口").Activate
            str = Cells(Int(indexNum(i) Mod (areaFindTo - areaFindFrom + 1)) + areaFindFrom, Int(indexNum(i) / (areaFindTo - areaFindFrom + 1)) * 3 + 5).Value
            Debug.Print "人口:" & str
            Sheets("地域の人口ランキング").Activate
            '行の指定
            Range("B3").End(xlDown).Select
            Selection.Offset(i * 4, 0).Select
            Debug.Print "-----------------------------------"
            Debug.Print "人口総数"
            Debug.Print "Selection.Address:" & Selection.Address
            Debug.Print "Selection.Address.Row:" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row
            Range("D" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row).Value = str
            
            '男性人口を地域の人口ランキングシートに反映
            Sheets("人口").Activate
            str = Cells(Int(indexNum(i) Mod (areaFindTo - areaFindFrom + 1)) + areaFindFrom, Int(indexNum(i) / (areaFindTo - areaFindFrom + 1)) * 3 + 5).Offset(1, 0).Value
            Debug.Print "人口:" & str
            Sheets("地域の人口ランキング").Activate
            Range("B3").End(xlDown).Select
            Selection.Offset(i * 4, 0).Select
            Debug.Print "-----------------------------------"
            Debug.Print "男性人口総数"
            Debug.Print "Selection.Address:" & Selection.Address
            Debug.Print "Selection.Address.Row:" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row
            Range("D" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row).Offset(-2, 2).Value = str
            
            '女性人口を地域の人口ランキングシートに反映
            Sheets("人口").Activate
            str = Cells(Int(indexNum(i) Mod (areaFindTo - areaFindFrom + 1)) + areaFindFrom, Int(indexNum(i) / (areaFindTo - areaFindFrom + 1)) * 3 + 5).Offset(2, 0).Value
            Debug.Print "人口:" & str
            Sheets("地域の人口ランキング").Activate
            Range("B3").End(xlDown).Select
            Selection.Offset(i * 4, 0).Select
            Debug.Print "-----------------------------------"
            Debug.Print "女性人口総数"
            Debug.Print "Selection.Address:" & Selection.Address
            Debug.Print "Selection.Address.Row:" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row
            Range("D" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row).Offset(-1, 2).Value = str
            
            
            
            '年度を地域の人口ランキングシートに反映
            Sheets("人口").Activate
            str = Cells(7, Int(indexNum(i) / (areaFindTo - areaFindFrom + 1)) * 3 + 5).Value
            Sheets("地域の人口ランキング").Activate
            Debug.Print "-----------------------------------"
            Debug.Print "年度"
            Range("D" & ActiveCell.row).FormulaR1C1 = str
            
            '地域CDを人口ランキングシートに反映
            Sheets("人口").Activate
            str = Cells(Int(indexNum(i) Mod (areaFindTo - areaFindFrom + 1)) + areaFindFrom, 1).Value
            Sheets("地域の人口ランキング").Activate
            Debug.Print "地域CD"
            Range("D" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row).Offset(-2, 0).Value = Left(str, 5)
            
            '地域名を人口ランキングシートに反映
            Range("D" & ActiveCell.MergeArea.Item(ActiveCell.MergeArea.Count).row).Offset(-1, 0).Value = Mid(str, 7)
            
        Next i
        
        
        
        'MsgBox tmpStrList(indexNum(0)) & "位は：" & tmpCnt(indexNum(0))
        'MsgBox tmpStrList(indexNum(1)) & "位は：" & tmpCnt(indexNum(1))
        'MsgBox tmpStrList(indexNum(2)) & "位は：" & tmpCnt(indexNum(2))
        'MsgBox tmpStrList(indexNum(3)) & "位は：" & tmpCnt(indexNum(3))
        
        
        
        For i = 0 To UBound(tmpCnt)
            tmpCnt(i) = 0
        Next i
        'メッセージボックス表示
        'MsgBox "最大値：" & Max & vbCrLf & "インデックス：" & Left(Max_index, Len(Max_index) - 1)
        
        
        
        
        
        cnt = 0
        str = ""
        
        ReDim rankList(4) As String
        For i = 0 To UBound(rankList)
            rankList(i) = "0"
        Next i
        ReDim tmpStrList1(UBound(tmpStrList)) As String
        For i = 0 To UBound(tmpStrList)
            If tmpStrList(i) = "" Then
                tmpStrList(i) = "0"
            End If
            tmpStrList1(i) = tmpStrList(i)
        Next i
        
        Dim str1 As String
        
        For rnk = 0 To arrList(4) - 1
            
            
            'Range("E" & i)とrankList(rnk)を比較し、第rnk位のRange("E" & i)[i]を抽出
            For i = 0 To UBound(tmpStrList)
                If CLng(rankList(rnk)) < CLng(tmpStrList(i)) Then
                        rankList(rnk) = tmpStrList(i)
                        tmpStrList(i) = 0
                        tmpCnt(rnk) = i
                End If
            Next i
            
            
            'データを元に戻す
            For i = 0 To UBound(tmpStrList)
                tmpStrList(i) = tmpStrList1(i)
            Next i
            
            
            '次の最上位検索のために、第rnk位のデータを0にする
            For i = 0 To arrList(4) - 1
                If tmpCnt(i) <> 0 Then
                    tmpStrList(i) = 0
                End If
            Next i
            
            str1 = str1 & rankList(rnk) & Chr(10)
            
            'rankList(rnk) = tmpStrList(0)
            'For i = 0 To UBound(tmpStrList)
            '    Debug.Print "lalalls" & i
            '    If i <> 0 Then
            '
            '        If tmpStrList(i) = "" Then
            '            tmpStrList(i) = "0"
            '        End If
            '
            '        If CLng(rankList(rnk)) < CLng(tmpStrList(i)) Then
            '            rankList(rnk) = tmpStrList(i)
            '            tmpStrList(i) = "0"
            '            str = rankList(rnk)
            '        End If
            '
            '    End If
            'Next i
            
        Next rnk
        
        str = ""
        For i = 0 To arrList(4) - 1
            str = str & rankList(i) & Chr(10)
        Next i
        Debug.Print str
        
        'MsgBox str1
        
        
        str = ""
        ReDim tmpCnt(arrList(4)) As Long
        ReDim rankList(4) As String
        rankList(0) = "0"
        rankList(1) = "0"
        rankList(2) = "0"
        rankList(3) = "0"
        Dim tempStrLIst1() As String
        ReDim tempStrLIst1(10) As String
        
        For i = 21 To 30
            tempStrLIst1(i - 21) = Range("E" & i).Value
        Next i
        For rnk = 0 To arrList(4) - 1
            For i = 21 To 30
                If CLng(rankList(rnk)) < CLng(Range("E" & i)) Then
                        rankList(rnk) = Range("E" & i).Value
                        Range("E" & i).Value = 0
                        tmpCnt(rnk) = i
                End If
            Next i
            
            For i = 21 To 30
                Range("E" & i).Value = tempStrLIst1(i - 21)
                
            Next i
            For j = 0 To arrList(4) - 1
                If tmpCnt(j) <> 0 Then
                    Range("E" & tmpCnt(j)).Value = 0
                End If
            Next j
            str = str & rankList(rnk) & Chr(10)
        Next rnk
        
        Debug.Print str
        
        
        
    Case Else
        
    End Select
End Sub
